#!/bin/bash

! $([[  "$CLA_ENV" == "prod" || "$CLA_ENV" == "staging" ]]) ||  grep sentry /etc/hosts > /dev/null 2>&1 || echo "$SENTRY_IPADDRESS $SENTRY_HOSTNAME" >> /etc/hosts

if ! [[ $ALLOWED_HOSTS =~ $(hostname -i) ]] ; then
  ALLOWED_HOSTS+=",$(hostname -i)" && echo "export ALLOWED_HOSTS=$ALLOWED_HOSTS" >> /etc/container_environment.sh
fi

cd /home/app/django
# Manage sync db
python manage.py syncdb --noinput >> /var/log/wsgi/db_scripts.log 2>&1

# manage syncdb migrate
python manage.py migrate  >> /var/log/wsgi/db_scripts.log 2>&1

python manage.py loaddata initial_category.json >> /var/log/wsgi/db_scripts.log 2>&1
python manage.py loaddata initial_mattertype.json >> /var/log/wsgi/db_scripts.log 2>&1
python manage.py loaddata kb_from_knowledgebase.json >> /var/log/wsgi/db_scripts.log 2>&1
python manage.py loaddata initial_outcome_codes.json >> /var/log/wsgi/db_scripts.log 2>&1
python manage.py loaddata initial_media_codes.json >> /var/log/wsgi/db_scripts.log 2>&1

python manage.py collectstatic --noinput >> /var/log/wsgi/db_scripts.log 2>&1

echo "from django.contrib.auth.models import User; User.objects.create_superuser('cla_admin','peter.idah@digital.justice.gov.uk', '$ADMIN_PASSWORD')" | ./manage.py shell || echo "user already exists"

exec /usr/local/bin/uwsgi --ini /etc/wsgi/conf.d/cla_backend.ini
